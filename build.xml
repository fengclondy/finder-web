<?xml version="1.0"?>

<!-- Build file for application -->
<project name="finder-web" default="buildwar" basedir=".">
    <!--  set global properties for this build -->
    <target name="init">
        <tstamp/>
        <property name="appName" value="finder-web"/>
        <property name="packageName" value="com.skin.finder"/>
        <property name="version" value="2.2.0"/>

        <!-- src directories -->
        <property name="src.java" value="${basedir}/src/main/java"/>
        <property name="src.resource" value="${basedir}/src/main/resource"/>
        <property name="src.lib" value="${basedir}/lib"/>
        <property name="src.doc" value="${basedir}/doc"/>
        <property name="src.webapp" value="${basedir}/webapp"/>

        <!-- build directories -->
        <property name="build.base" value="${basedir}/build"/>
        <property name="build.classes" value="${build.base}/release/classes"/>
        <property name="build.doc" value="${build.base}/docs"/>
        <property name="build.doc.javadoc" value="${build.doc}/javadoc"/>
        <property name="build.release" value="${build.base}/release"/>

        <!-- jarFileName -->
        <property name="jarFileName" value="${appName}-${version}.jar"/>

        <!-- compile parameters -->
        <property name="debug" value="on"/>
        <property name="optimize" value="off"/>
        <property name="deprecation" value="on"/>
        <property name="packages" value="*"/>
    </target>

    <target name="prepare" depends="init">
        <!--  Create the time stamp -->
        <tstamp>
           <format property="timeStamp" pattern="yyyyMMdd-HHmm" locale="zh_cn"/>
        </tstamp>
        <!--  Create the build directory structure used by compile -->
        <mkdir dir="${build.base}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Build Jar                                                           -->
    <!-- =================================================================== -->
    <target name="compile" depends="prepare">
        <delete dir="${build.classes}"/>
        <mkdir dir="${build.classes}"/>
        <javac
            destdir="${build.classes}"
            includes="*/**"
            fork="true"
            memorymaximumsize="512M"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}"
            encoding="UTF-8"
            listfiles="no"   
            verbose="no">
            <compilerarg line="-Xlint:unchecked"/>

            <src path="${src.java}"/>

            <classpath>
                <fileset dir="${src.lib}">
                    <include name="**/*.jar"/>
                    <include name="**/*.zip"/>
                </fileset>
                <fileset dir="${basedir}/lib">
                    <include name="**/*.jar"/>
                    <include name="**/*.zip"/>
                </fileset>
            </classpath>
        </javac>

        <copy todir="${build.classes}" includeEmptyDirs="no">
            <fileset dir="${src.resource}">
                <include name="/resource/**"/>
                <exclude name="**/*.psd"/>
            </fileset>
        </copy>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source directory and creates a .jar file               -->
    <!-- =================================================================== -->
    <target name="buildjar" depends="compile">
        <delete file="${build.release}/${appName}-${version}.jar"/>

        <jar destfile="${build.release}/${appName}-${version}.jar">
            <fileset dir="${build.classes}">
                <include name="/com/skin/finder/**"/>
                <include name="/resource/**"/>
            </fileset>
            <manifest>
                <attribute name="Built-By" value="xuesong.net"/>
            </manifest>
        </jar>
        <echo>Jar: ${build.release}/${jarFileName}</echo>

        <copy todir="${basedir}/webapp/WEB-INF/classes" includeEmptyDirs="no">
            <fileset dir="${src.resource}">
                <exclude name="/resource/**"/>
            </fileset>
        </copy>
        <copy file="${build.release}/${appName}-${version}.jar" todir="${basedir}/release"/>
        <copy file="${build.release}/${appName}-${version}.jar" todir="${basedir}/webapp/WEB-INF/lib"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source directory and creates a .war file               -->
    <!-- =================================================================== -->
    <target name="buildwar" depends="buildjar">
        <delete file="${build.release}/${appName}.war"/>

        <war destfile="${build.release}/${appName}.war"
             webxml="${src.webapp}/WEB-INF/web.xml"
             basedir="${src.webapp}">
            <exclude name="test.jsp"/>
            <exclude name="finder.jsp"/>
            <exclude name="template/**"/>
        </war>

        <delete file="${basedir}/release/${appName}.war"/>

        <copy file="${build.release}/${appName}.war" todir="${basedir}/release"/>
        <echo>War: ${build.release}/${appName}.war</echo>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the API documentation                                       -->
    <!-- =================================================================== -->
    <target name="javadoc" depends="prepare">
        <mkdir dir="${build.doc.javadoc}"/>
        <javadoc packagenames="${packages}"
                 sourcepath="${src.java}"
                 destdir="${build.doc.javadoc}"
                 author="true"
                 version="true"
                 windowtitle="${appName} API"
                 doctitle="${appName} API Documentation"
                 bottom="Copyright &#169; 2001 skin. All Rights Reserved.">
            <classpath>
                <fileset dir="${src.lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javadoc>
    </target>
</project>